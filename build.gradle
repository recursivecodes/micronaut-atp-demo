plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "groovy"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
}

version "0.1"
group "codes.recursive.gorm.atp"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://dl.bintray.com/grails/grails-core/" }

}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:2.0.0.M3'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compile 'io.micronaut.configuration:micronaut-hibernate-gorm'
    implementation 'com.oracle.database.jdbc:ojdbc8:19.6.0.0'

    compile "io.micronaut.graphql:micronaut-graphql:1.0.0"
    compile "io.micronaut.graphql:micronaut-graphql-gorm:1.1.0"
    
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-runtime-groovy"
    compile "io.micronaut:micronaut-validation"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "io.micronaut.test:micronaut-test-spock:1.0.1"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "codes.recursive.gorm.atp.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

task myRun(type: JavaExec){
    classpath sourceSets.main.runtimeClasspath
    main = mainClassName
    systemProperties = System.properties
}
task copyResources(type:Copy) {
    from "build-resource"
    into "build"
}

assemble.dependsOn copyResources